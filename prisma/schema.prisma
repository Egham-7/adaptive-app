enum CreditTransactionType {
  purchase
  usage
  refund
  promotional
}

enum FallbackMode {
  sequential
  race
}

enum ProviderVisibility {
  system
  project
  organization
  community
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  output   = "./generated"
}

model Conversation {
  id        Int       @id @default(autoincrement())
  title     String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  userId    String

  messages Message[]
  pinned   Boolean   @default(false)

  @@index([deletedAt])
}

model Message {
  id   String @id @default(cuid())
  role String

  metadata    Json?
  annotations Json?
  parts       Json

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  conversation   Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
  conversationId Int

  @@index([deletedAt])
  @@index([conversationId])
  @@index([role])
}

model Subscription {
  id                   String    @id @default(cuid())
  userId               String    @unique
  stripeCustomerId     String?   @unique
  stripePriceId        String?
  stripeSubscriptionId String?   @unique
  status               String // 'active' | 'canceled' | 'past_due' | 'unpaid'
  currentPeriodEnd     DateTime?
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt

  @@index([userId])
  @@index([status])
}
